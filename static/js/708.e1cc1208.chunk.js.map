{"version":3,"file":"static/js/708.e1cc1208.chunk.js","mappings":"ySAGMA,G,QAAY,SAAAC,GAAM,OACrBC,IAAAA,SAAAA,QAAA,kBACID,GADJ,IAECE,QAAS,uCAIbD,IAAAA,SAAAA,QAAyB,+BAClB,IAAME,EAAY,WAEvB,OADAJ,IACOE,IAAAA,IACA,uBACJG,MAAK,SAAAC,GAEJ,OAAOA,EAAIC,KAAKC,WAEjBC,OAAM,SAAAC,GACL,MAAMA,MAKCC,EAAmB,SAAAC,GAE9B,OADAZ,EAAU,CAAEY,MAAAA,IACLV,IAAAA,IACA,iBACJG,MAAK,SAAAC,GAEJ,IAAKA,EAAIC,KAAKC,QAAQK,OACpB,MAAM,IAAIC,MAAM,aAGlB,OAAOR,EAAIC,KAAKC,WAEjBC,OAAM,SAAAC,GACL,MAAMA,MAKCK,EAAoB,SAAAC,GAE/B,OADAhB,EAAU,CAAEgB,SAAAA,IACLd,IAAAA,IAAA,iBACUc,IACdX,MAAK,SAAAC,GAEJ,OAAOA,EAAIC,QAEZE,OAAM,SAAAC,GACL,MAAMA,MAKCO,EAAiB,SAAAD,GAE5B,OADAhB,EAAU,CAAEgB,SAAAA,IACLd,IAAAA,IAAA,iBACUc,EADV,aAEJX,MAAK,SAAAC,GAEJ,OAAOA,EAAIC,KAAKW,QAEjBT,OAAM,SAAAC,GACL,MAAMA,MAKCS,EAAoB,SAAAH,GAE/B,OADAhB,EAAU,CAAEgB,SAAAA,IACLd,IAAAA,IAAA,iBACUc,EADV,aAEJX,MAAK,SAAAC,GAEJ,OAAOA,EAAIC,KAAKC,WAEjBC,OAAM,SAAAC,GACL,MAAMA,O,2FC1CZ,UAjCA,WACE,OAA4BU,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,MAAYC,MAAK,SAAAE,GACfe,EAAUf,QAEX,KAGD,iBAAKmB,UAAU,mBAAf,WACE,4CACA,wBACGL,GACCA,EAAOM,KAAI,SAAAC,GAAE,OACX,yBACE,SAAC,KAAD,CAEEC,GAAI,CACFC,SAAU,WAAaF,EAAGG,GAC1BC,MAAO,CAAEC,KAAMV,IAJnB,SAOGK,EAAGM,kBARCN,EAAGG","sources":["utils/FetchApi.jsx","views/HomeView.jsx"],"sourcesContent":["import axios from 'axios';\nexport * from '../utils/FetchApi';\n\nconst setParams = params =>\n  (axios.defaults.params = {\n    ...params,\n    api_key: 'b2c3269bd358b01baf914c84972bca6a',\n  });\n//===================================================================\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const GetMovies = () => {\n  setParams();\n  return axios\n    .get('/trending/movie/day')\n    .then(res => {\n      // console.log('res :>> ', res.data.results);\n      return res.data.results;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\nexport const FetchMovieByName = query => {\n  setParams({ query });\n  return axios\n    .get('/search/movie')\n    .then(res => {\n      // console.log('FetchMovieByName :>> ', res.data.results);\n      if (!res.data.results.length) {\n        throw new Error('Not found');\n      }\n      // console.log('FetchMovieByName :>> ', res.data.results);\n      return res.data.results;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\nexport const FetchMovieDetails = movie_id => {\n  setParams({ movie_id });\n  return axios\n    .get(`/movie/${movie_id}`)\n    .then(res => {\n      // console.log('FetchMovieDetails :>> ', res.data);\n      return res.data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\nexport const FetchMovieCast = movie_id => {\n  setParams({ movie_id });\n  return axios\n    .get(`/movie/${movie_id}/credits`)\n    .then(res => {\n      // console.log('FetchMovieCast :>> ', res.data.cast);\n      return res.data.cast;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\nexport const FetchMovieReviews = movie_id => {\n  setParams({ movie_id });\n  return axios\n    .get(`/movie/${movie_id}/reviews`)\n    .then(res => {\n      // console.log('FetchMovieReviews :>> ', res.data.results);\n      return res.data.results;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { GetMovies } from 'utils/FetchApi';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    GetMovies().then(data => {\n      setMovies(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"homeView_Wrapper\">\n      <h1>Tranding today</h1>\n      <ul>\n        {movies &&\n          movies.map(el => (\n            <li key={el.id}>\n              <Link\n                // to={`/movies/${el.id}`}\n                to={{\n                  pathname: '/movies/' + el.id,\n                  state: { from: location },\n                }}\n              >\n                {el.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"names":["setParams","params","axios","api_key","GetMovies","then","res","data","results","catch","err","FetchMovieByName","query","length","Error","FetchMovieDetails","movie_id","FetchMovieCast","cast","FetchMovieReviews","useState","movies","setMovies","location","useLocation","useEffect","className","map","el","to","pathname","id","state","from","original_title"],"sourceRoot":""}